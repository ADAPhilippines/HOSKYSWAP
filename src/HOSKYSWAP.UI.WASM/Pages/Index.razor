@namespace HOSKYSWAP.UI.WASM.Pages
@using HOSKYSWAP.Common
@inherits IndexBase
@page "/"
<PageTitle>$HOSKY SWAP</PageTitle>

<MudTabs Class="max-w-base-content w-full backdrop-filter backdrop-blur-[5px] bg-transparent-dark text-white mt-12 rounded-lg">
    <MudTabPanel Icon="@Icons.Filled.Repeat" Text="Swap" Class="swap-tab">
        @if (AppStateService?.CurrentOrder is null)
        {
            <div class="flex flex-col justify-center mt-4 p-4 pb-4 cursor-default">
                <div>
                    <div class="font-semibold text-lg float-left">Swap</div>
                    <div class="font-semibold text-lg float-right">24H Volume</div>
                </div>
                <div>
                    <div class="float-left">Cardano network</div>
                    <div class="float-right text-currency">$@(AppStateService?.DailyVolume.ToString("F2"))</div>
                </div>
                <div class="flex flex-col align-center gap-y-2 mt-4">
                    <div class="w-full">
                        <div class="text-md">From:</div>
                        <div class="flex flex-row w-full mt-2">
                            <div class="mr-2 w-3/4 flex flex-col">
                                <MudTextField Value="FromAmount" Placeholder="0.0" InputType="InputType.Number" Variant="Variant.Outlined" Margin="Margin.None" Class="hsky-textfield inline w-full font-semibold" T="decimal" ValueChanged="OnFromAmountChange" Immediate="true"></MudTextField>
                                @if (DisplayFromError)
                                {
                                    <div class="text-red-600 pt-[4px]">@FromErrorMessage</div>
                                }
                            </div>
                            <MudSelect Value="FromToken" T="string" ValueChanged="OnFromTokenChanged" Variant="Variant.Outlined" Margin="Margin.None" OffsetY="true" Class="text-white inline hsky-select w-[125px]" Dense="true" PopoverClass="bg-dark-color text-white">
                                <MudSelectItem Value="@("HOSKY")" Class="flex flex-row align-center">
                                    <img src="/images/hosky.webp" class="hsky-select-item-image "/><span class="inline text-xs font-semibold">HOSKY</span>
                                </MudSelectItem>
                                <MudSelectItem Value="@("ADA")">
                                    <img src="/images/cardano_logo_white.svg" class="hsky-select-item-image "/> <span class="inline text-xs font-semibold">ADA</span>
                                </MudSelectItem>
                            </MudSelect>
                        </div>
                    </div>

                    <div class="w-full">
                        <div class="text-md">Price:</div>
                        <div class="w-full mt-2">
                            <MudTextField Value="PriceAmount" T="decimal" ValueChanged="OnPriceAmountChange" Immediate="true" Placeholder="Enter Price" Variant="Variant.Outlined" Class="hsky-textfield mr-2 w-3/4 inline" AdornmentText="$ADA" Adornment="Adornment.End"></MudTextField>
                        </div>
                    </div>

                    <div class="-mt-6">
                        <MudIconButton Icon="@Icons.Filled.SwapVert" Class="text-white" Size="Size.Large" OnClick="OnSwapClicked"/>
                    </div>

                    <div class="w-full -mt-6">
                        <div class="text-md">To:</div>
                        <div class="flex flex-row w-full mt-2">
                            <div class="mr-2 w-3/4 flex flex-col">
                                <MudTextField Value="ToAmount" Placeholder="0.0" Immediate="true" InputType="InputType.Number" Variant="Variant.Outlined" Margin="Margin.None" Class="hsky-textfield inline font-semibold" T="decimal" ValueChanged="OnToAmountChange"></MudTextField>
                                @if (DisplayToError)
                                {
                                    <div class="text-red-600 pt-[4px]">@ToErrorMessage</div>
                                }
                            </div>
                            <MudSelect Value="ToToken" T="string" ValueChanged="OnToTokenChanged" Variant="Variant.Outlined" Margin="Margin.None" OffsetY="true" Class="text-white inline hsky-select w-[125px]" Dense="true" PopoverClass="bg-dark-color text-white">
                                <MudSelectItem Value="@("HOSKY")" Class="flex flex-row align-center">
                                    <img src="/images/hosky.webp" class="hsky-select-item-image "/><span class="inline text-xs font-semibold">HOSKY</span>
                                </MudSelectItem>
                                <MudSelectItem Value="@("ADA")">
                                    <img src="/images/cardano_logo_white.svg" class="hsky-select-item-image "/> <span class="inline text-xs font-semibold">ADA</span>
                                </MudSelectItem>
                            </MudSelect>
                        </div>
                    </div>

                    <div>
                        <span>Swap Fee:</span>
                        <span class="text-currency">0.694200 $ADA</span>
                    </div>

                    <MudButton Disabled="GetShouldDisableSwapButton()" OnClick="OnSubmitSwapClicked" Class="text-sm bg-gradient-to-r from-aph-indigo to-aph-blue filter brightness-100 hover:brightness-125 text-white font-semibold rounded-lg p-3 normal-case w-full">
                        <MudIcon Icon="@Icons.Filled.Repeat" Class="mr-2"/>
                        <span>Swap</span>
                    </MudButton>

                    <div class="w-full text-right mt-2">
                        <span>Total Fees Rugpulled: </span>
                        @if (AppStateService is not null)
                        {
                            <span class="text-currency">@(AppStateService.TotalFeesRugpulled) $ADA</span>
                        }
                        else
                        {
                            <span class="text-currency">0.000000 $ADA</span>
                        }
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="flex flex-col justify-end pt-4 px-4 h-[504px] mt-4 cursor-default">
                <div class="flex flex-row w-full justify-center align-center gap-x-8">
                    <img src="/images/cardano_logo_white.svg" alt="Cardano" class="h-[100px] w-[100px]"/>
                    <MudIcon Icon="@Icons.Filled.Refresh" Class="text-white animate-spin" Size="Size.Large"/>
                    <img src="/images/hosky.webp" class="h-[100px] w-[100px]" alt="HOSKY"/>
                </div>
                <div class="text-lg text-center mt-12 mb-20">
                    <p>You currently have a <span class="font-semibold uppercase">"@AppStateService?.CurrentOrder.Action"</span> order,</p>
                    <p>
                        <span class="text-currency">@(@AppStateService?.CurrentOrder.Action == "buy" ? @AppStateService?.CurrentOrder.Total / 1000000 : @AppStateService?.CurrentOrder.Total) @(@AppStateService?.CurrentOrder.Action == "buy" ? "$ADA" : "$HOSKY")</span> @("@") <span class="text-currency">@AppStateService?.CurrentOrder.Rate $ADA</span> <span class="font-semibold">$ADA/$HOSKY</span>
                    </p>
                    <p class="font-bold text-red-500">DISCLAIMER: If you already cancelled, please just wait and don't press cancel again or else you will get rugpulled.</p>
                </div>
                <MudButton OnClick="OnCancelSwapClicked" Class="text-sm bg-gradient-to-r from-aph-indigo to-aph-blue filter brightness-100 hover:brightness-125 text-white font-semibold rounded-lg p-3 normal-case w-full mb-[53px]">
                    <MudIcon Icon="@Icons.Filled.RemoveCircle" Class="mr-2"/> <span>Cancel</span>
                </MudButton>
            </div>
        }

    </MudTabPanel>
    <MudTabPanel Icon="@Icons.Filled.History" Text="History">
        <div class="flex flex-col justify-start align-center mt-4 pb-[4px] h-[504px] cursor-default">
            <div class="font-semibold text-lg">Swap History</div>
            <div class="flex flex-col w-full">
                <div class="overflow-y-auto max-h-[450px] mt-4">
                    <table class="table-fixed w-full">
                        <tr>
                            <th class="pb-2 w-1/2">Amount</th>
                            <th class="pb-2 w-1/4">Action</th>
                            <th class="pb-2 w-1/4">Date</th>
                        </tr>
                        @if (AppStateService?.OrderHistory is not null)
                        {
                            @foreach (var order in AppStateService.OrderHistory)
                            {
                                <tr class="text-center cursor-pointer odd:bg-dark-color even:bg-row-color hover:selected-order">
                                    <td class="text-left pl-1 py-1 w-full">
                                        <MudTooltip Placement="Placement.Top" Text="@("price: " + order.Rate + " $ADA")">
                                            @if (order.Action is "buy")
                                            {
                                                <span>@((ulong)(order.Total / order.Rate / 1_000_000)) $HOSKY</span>
                                            }
                                            else
                                            {
                                                <span>@RoundAmount(order.Total * order.Rate) $ADA</span>
                                            }
                                        </MudTooltip>
                                    </td>
                                    @if (order.Status is Status.Filled)
                                    {
                                        <td class="@(order.Action is "buy" ? "text-green-500" : "text-red-500") py-1 w-full uppercase">
                                            <MudTooltip Placement="Placement.Top" Text="@("price: " + order.Rate + " $ADA")">
                                                @order.Action
                                            </MudTooltip>
                                        </td>
                                    }
                                    else if (order.Status is Status.Cancelled)
                                    {
                                        <td class="text-gray-600 py-1 w-full uppercase">
                                            <MudTooltip Placement="Placement.Top" Text="@("price: " + order.Rate + " $ADA")">
                                                Cancel
                                            </MudTooltip>
                                        </td>
                                    }
                                    else
                                    {
                                        <td class="text-gray-600 py-1 w-full uppercase"></td>
                                    }

                                    <td class="py-1 w-full">
                                        <MudTooltip Placement="Placement.Top" Text="@("price: " + order.Rate + " $ADA")">
                                            @(order.UpdatedAt.ToString("MM/dd/yyyy"))
                                        </MudTooltip>
                                    </td>
                                </tr>
                            }
                        }
                    </table>
                </div>
            </div>
        </div>
    </MudTabPanel>
</MudTabs>

<div class="flex flex-col">
    <div class="w-full flex justify-center">
        <MudCard Class="backdrop-filter backdrop-blur-[5px] bg-transparent-dark flex flex-row justify-center mt-12 p-[4px] text-white w-full place-self-center">
            @if (AppStateService?.OpenOrderRatio is not null)
            {
                <div class="bg-green-500 h-2 p-0 transition-all" style="width:@AppStateService.OpenOrderRatio.Buy%"></div>
                <div class="bg-red-500 h-2 p-0 transition-all" style="width:@AppStateService.OpenOrderRatio.Sell%"></div>
            }
        </MudCard>
    </div>
    <div class="flex flex-row w-full justify-center pb-8">
        <MudCard Class="backdrop-filter backdrop-blur-[5px] bg-transparent-dark flex flex-col justify-start mt-4 text-white h-[400px] w-[400px] pb-[1px] cursor-default">
            <div class="text-center font-semibold text-xl p-2 mt-4">Buy Order</div>
            <div class="flex flex-col">
                <div class="grid grid-cols-2 gap-0 p-2">
                    <div class="font-semibold text-left">Amount: ($ADA)</div>
                    <div class="font-semibold text-right">Price ($ADA)</div>
                </div>
                <div class="overflow-y-auto max-h-[300px] ">
                    @if (AppStateService?.OpenBuyOrders is not null)
                    {
                        @foreach (var buyOrder in AppStateService.OpenBuyOrders)
                        {
                            <div class="grid grid-cols-2 text-center p-2 cursor-pointer odd:bg-dark-color even:bg-row-color hover:selected-order">
                                <div class="text-left">@((buyOrder.Total / 1_000_000)) $ADA</div>
                                <div class="text-green-500 text-right">@(buyOrder.Rate) $ADA</div>
                            </div>
                        }
                    }
                </div>
            </div>
        </MudCard>
        <MudCard Class="backdrop-filter backdrop-blur-[5px] bg-transparent-dark flex flex-col justify-start mt-4 text-white ml-4 h-[400px] w-[400px] pb-[1px] cursor-default">
            <div class="text-center font-semibold text-xl p-2 mt-4">Sell Order</div>
            <div class="flex flex-col">
                <div class="grid grid-cols-2 gap-0 p-2">
                    <div class="font-semibold text-left">Price ($ADA)</div>
                    <div class="font-semibold text-right">Amount: ($HOSKY)</div>
                </div>
                <div class="overflow-y-auto max-h-[300px] ">
                    @if (AppStateService?.OpenSellOrders is not null)
                    {
                        @foreach (var sellOrder in AppStateService.OpenSellOrders)
                        {
                            <div class="grid grid-cols-2 text-center p-2 cursor-pointer odd:bg-dark-color even:bg-row-color hover:selected-order">
                                <div class="text-red-500 text-left">
                                    @(sellOrder.Rate) $ADA
                                </div>
                                <div class="text-right">
                                    @(sellOrder.Total) $HOSKY
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </MudCard>
    </div>
</div>


<MudDialog @bind-IsVisible="IsDisclaimerDialogVisible" Options="@AppStateService?.DialogOptions">
    <TitleContent>
        <div class="flex flex-row align-center">
            <MudIcon Icon="@Icons.Material.Filled.Warning" Class="mr-3 text-white" Size="Size.Large"/>
            <div class="text-xl font-semibold">ATTENTION</div>
        </div>

    </TitleContent>
    <DialogContent>
        <p class="text-base mb-2"><span>This is a super dodgy </span><strong>ADA</strong> to <strong>HOSKY</strong><span> exchange!</span></p>
        <ul class="ml-[24px] list-disc text-base mb-1">
            <li>Expect to get rug pulled anytime in these premises.</li>
            <li>We can't seem to get our math right. Trade only if you are an idiot.</li>
            <li>We are running our servers on using a steam engine. Don't expect transactions to be fast.</li>
            <li>Only total dumba**es put huge amount of ADA into this shady site.</li>
            <li>Our system currently uses centralized dumb contracts. We will be downgrading into smart contracts in the future.</li>
            <li>The rugpull fee is 0.69420 $ADA.</li>
        </ul>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="OnCloseDialog" Class="px-10 font-semibold mb-2">I am stupid and I will proceed.</MudButton>
    </DialogActions>
</MudDialog>


<MudDialog @bind-IsVisible="IsGeneralDialogVisible" Options="@AppStateService?.DialogOptions">
    <TitleContent>
        <div class="flex flex-row align-center">
            <MudIcon Icon="@Icons.Material.Filled.Info" Class="mr-3 text-white" Size="Size.Large"/>
            <div class="text-xl font-semibold">Status</div>
        </div>
    </TitleContent>
    <DialogContent>
        <p class="select-text">@GeneralDialogMessage</p>
    </DialogContent>
    <DialogActions>
        @if (IsGeneralActionVisible)
        {
            <MudButton Variant="Variant.Filled" Color="Color.Success" Class="px-10 font-semibold mb-2" OnClick="HideGeneralDialog">OK</MudButton>
        }
    </DialogActions>
</MudDialog>